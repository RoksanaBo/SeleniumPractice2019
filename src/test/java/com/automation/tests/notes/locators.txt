
Locators: helps to find elements and work with them. Its a pointers of particular element of the page.
To be able to find an element, we need to use locator. Make sure that locator points on 1 particular element.


id         --> attribute in HTML   <h3 id="smth"></h3>   the best locator,always unique

name       --> attribute in HTML   <h3 name="smth"></h3>  good locator, not always unique, but mostly

className  --> attribute in HTML    <h3 class="smth"></h3> not good locator, because almost never unique

tagName    --> HTML element itself    <h3></h3>   (h3  is a tag name) not good locator, because almost never unique

linkText  --> visible text of the link  --> ok locator, sometimes unique

partialLinkText --> partially mentioned text  --> same as linkText   частично упомянутый текст

XPath  -->
CSS    -->



id --> always unique attribute. id in HTML is used to distinguish element out of others.      id в HTML используется, чтобы отличить элемент от других.

<div id="btn>Hello world!</div>




id --> unique
h3 --> unique
class="  --> unique
name --> unique


// tag
[] value
<a  hyperlink  гиперссылка . Every element with <a> tag is a link

To check if tagName is unique --> //tagname
To check some attribute like name, id, class --> just put attribute=value pair into square brackets[]
If it shows 1 of 1 --> locator is unique.

If you see button on page, it doesn't always based on <button> tag.
Check first what kind of <tag> represents that element.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WebElement represents one particular element from the page. Why do we find them?
To perform some actions, like: click, enter text, read text, etc....

WebElement - this is how selenium wraps any kind of elements on the page.
Webelement - is an Interface.
syntax - driver find an element by this locator
findElement - a method, thats returns a WebElement object.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

We can find element, based on name attribute. Use square brackets.    [name='   ']
Name is one of the selenium locators. To choose locator, just use By.  +locator
name -->   [name='(name of the element)']

example:
<input name="q"type="text"/>
WebElement search = driver.findElement(By.name("q"));

how to enter the text:    use .sendKeys()
search.sendKeys("Java");

how to press Enter after entering text:  use Key.ENTER
search.sendKeys("Java", Key.ENTER);

When you see type="submit", you can use submit() instead of click().
It make sense to use when click() method doesn't work.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


.sendKeys() --> to enter text
Keys.ENTER  --> perform keyboard click
keysToSend --> name of the parameter, we don't specify it
Thread.sleep()  --> used to pause java program
findElement()  -->  a method, thats returns a WebElement object.
.getText() -->    returns visible text of the element, get text from element
                  appears between opening and closing tags is a visible text.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.getAttribute() --> returns attribute's value.      attribute - orange color
   Example:
     <a class="button secondary radius" href="/logout"><i class="icon-2x icon-signout"> Logout</i></a>

     a -tag name
     class - attribute
     href - attribute
     Logout - text

     getAttribute("class")  ---> button secondary radius

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you see <a> element, it calls link. Visible text of this link can be used by selenium to find this element.


