
TestNG -tool for unit testing with library.

JUnit - very popular testing tool too.It was created before TestNG.

We used this tools to:
- provide assertions for verify
- it can generate report
- for visual representation for your test results
--------------------------------------------------------------------------------------------------------

Assertions - helps to verify your test. If test passed or failed.

assertTrue:
  assertTrue(true);
  assertTrue(1==1);
  assertTrue(element.isDisplayed());


assertEquals():
  assertEquals(1, 1)
  assertEquals("a","a")
  assertEquals(driver.getTitle(),"Google)

------------------------------------------------------------------------------------------------------------
  Where to find assertions:
  mvnrepository.com --> testng --> version 6.14 for example --> copy maven dependency -->
  --> add it in pom.xml file between <dependencies>    </dependencies>
  Once we added dependency, we are ready to use testng. HOW?

  simple void method:  Unit test:

//annotation:  примечание
 @Test(description = "....")   // just a comment
    public void test(){
    }


@Test annotation used to create a test. They change the behavior of the method.
 Put it on top of the method. In case we don't use main method and we can create lots of tests in one class.


Assert org.testng  its coming from testing, JUnit also has this class.


Assert.assertEquals(actual, expected) --> to verify if expected result is equals to actual

If there is an error, it will throw exception.

You can compare any data types here: strings,primitives,arrays,objects


Hard assertion - if assertion fails, it stops the execution (due to exception).

----------------------------------------------------------------------------------------------
Annotations: used to develop more complex framework,

 @BeforeMethod --> runs before every test automatically, works as a pre-condition or setup.
                   used when we need to run some test before everything. Or something has to be
                   set up before every test.Something that should happen before everything
                   automatically. It's coming from testng also.


 @AfterMethod -->  something that should be done only once. It runs automatically after every test.

-----------------------------------------------------------------------------------------------
 @BeforeClass --> runs  only once before any other methods

 @AfterClass --> runs only once in after all methods in this class

 ----------------------------------------------------------------------------------------------

 @BeforeTest -->runs only once before @BeforeClass and @BeforeMethod

 @AfterTest -->runs once after @AfterClass

 --------------------------------------------------------------------------------------------

 SUITE - it's a collection of tests. For example: regression suite.

 TestNG has 2 types of assertions: hard and soft.
 Assert class provides hard assertions.
 What's the difference? If hard assertion fails - test execution stops due to exception.
 In case of soft assertion - test execution doesn't stop. For soft assertions you can use the class - SoftAssert.
 But, common practice is to use only hard assertions. Junit, for example, has only hard assertions.

 We use annotation to create tests and organize them.


 TestNg - is a testing framework. You can execute batch/bunch of test cases. Or execute optional.
