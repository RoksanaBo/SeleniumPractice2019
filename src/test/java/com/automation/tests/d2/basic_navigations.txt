

driver.get()       --> to open the web site

driver.manage().window().maximize()    --> to maximize screen

driver.manage().window().fullscreen()  --> full screen

Thread.sleep(3000)  --> for demo, wait 3 seconds

driver.getTitle()  --> returns page title     <title>Some title</title> text     you can also see it as tab name, in the browser

driver.close()     -->  to close browser, close only 1 window, browser cannot close itself.

driver.navigate().to(url)  --> go to another website within the same window

driver.navigate().back() --> to go back

driver.navigate().forward()  --> move forward in the browser history  вперёд

driver.navigate().to() = driver.get()     this two methods are same

driver.navigate().refresh()   --->  to reload page

driver.getCurrentUrl()   -->  to get URL           System.out.println("URL : " + driver.getCurrentUrl());

driver.quit()   --> closes everything .

--------------------------------------------------------------------------------------------------------------------------
Selenium can jump in between windows. If you have opened more than 1 window during test execution,
by calling quit() method you can be sure that anything that was opened by web driver will be closed.

You jump between windows, you need to write a code. Selenium never switch automatically.
--------------------------------------------------------------------------------------------------------------------------

driver.getWindowHandle()  --> represents one particular window,where you currently are// представляет одно конкретное окно  где вы находитесь в данный момент
         Set<String> windowHandles =driver.getWindowHandles()  -->  id's of all currently opened windows
         Set only allows unique values.



driver.switchTo()  --> to switch window   --->     for(String windowID: windowHandles){
                                                       if( ! windowID.equals(windowHandle)){
                                                          driver.switchTo().window(windowID);
                                                       }
                                                    }





