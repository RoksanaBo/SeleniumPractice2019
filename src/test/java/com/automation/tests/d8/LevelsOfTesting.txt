Levels of testing:

UNIT testing --> testing of smallest functional keys of the application.
                 Ex: method, class..

  In my project developers will following this flow:
     developers write a code --> unit tests to test their code -->
     --> code review--> code goes to github(for example)-->
     --> new build can be deployed to the test env --> and
     here we do functional testing . Unit testing at the very early
     stage, because it's easier to find a bug.

  Who writes unit test? for application code - developers.
  Can I write some unit tests for my automation framework? yes.


  import org.testng.annotations.Test;

@Test annotation used to create a test. Put it on top of the method.In this case,
 we don't use main method and we can create lots of tests in one class.


BEFORE SUITE
    BEFORE TEST
        BEFORE CLASS
            BEFORE METHOD
                TEST 1
            AFTER METHOD
            BEFORE METHOD
                TEST 2
            AFTER METHOD
        AFTER CLASS
    AFTER TEST
AFTER SUITE


SUITE - it's a collection of tests. For example: regression suite.
TestNG has 2 types of assertions: hard and soft.
Assert class provides hard assertions.
What's the difference? If hard assertion fails - test execution stops due to exception. In case of soft assertion - test execution doesn't stop. For soft assertions you can use the class - SoftAssert. But, common practice is to use only hard assertions. Junit, for example, has only hard assertions.



TestNG - it's a unit testing,functional testing, e2e testing tool. In test automation we use TestNG
along with Selenium WebDriver to develop UI test automation scripts. TestNG was inspired by Junit(another very popular unit testing fremework).

TestNG has:
- annotations for more complex test, like: @BeforeSuite, @BeforeClass, @BeforeMethod,@Test etc..
- allows to create test suits with xml runners
- has in-build HTML report
- allows to group tests
- allows to do Data riven Testing



integration
system
UAT